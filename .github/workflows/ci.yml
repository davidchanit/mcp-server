name: Continuous Integration

on:
  push:
    branches: [ main, develop, 'feature/*', 'fix/*' ]
  pull_request:
    branches: [ main, develop, 'feature/*', 'fix/*' ]

env:
  JAVA_VERSION: '17'

jobs:
  # üîç Code Quality & Testing
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run tests
      run: mvn test -B
    
    - name: Build JAR
      run: mvn clean package -DskipTests -B
    
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: mcp-server-jar
        path: target/mcp-server-1.0.0.jar
        retention-days: 7

  # Security Scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    continue-on-error: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Run Maven Security Check
      run: |
        echo "Running Maven dependency analysis..."
        mvn dependency:tree
        echo "Checking for known vulnerabilities..."
        mvn org.owasp:dependency-check-maven:check -DfailOnCVSS=7 || echo "Security scan completed with warnings"

  # üê≥ Docker Build & Test
  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Build JAR for Docker
      run: mvn clean package -DskipTests -B
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t mcp-server:latest .
    
    - name: Test Docker image
      run: |
        docker run -d --name mcp-test -p 8080:8080 mcp-server:latest
        sleep 10
        curl -f http://localhost:8080/api/v1/health || exit 1
        docker stop mcp-test
        docker rm mcp-test 