name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
    
    - name: Build JAR
      run: mvn clean package -DskipTests -B
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## ðŸš€ What's New in ${{ github.ref }}
          
          ### Features
          - MCP Server implementation with Spring AI
          - Calculator tools (add, subtract, multiply, divide, calculate)
          - Game tools (Rock, Paper, Scissors)
          - MCP protocol endpoints
          - Docker containerization
          - Comprehensive testing
          
          ### Technical Details
          - Java 17
          - Spring Boot 3.4.4
          - Spring AI 1.0.0-M7
          - Maven build system
          - Docker support
          
          ### Quick Start
          ```bash
          # Run locally
          mvn spring-boot:run -Dspring-boot.run.profiles=prod
          
          # Run with Docker
          docker run -p 8090:8090 ghcr.io/${{ github.repository }}:${{ github.ref }}
          ```
          
          ### API Documentation
          - MCP Ping: `POST /api/v1/mpc` with `{"jsonrpc": "2.0", "id": 1, "method": "ping", "params": {}}`
          - List Tools: `POST /api/v1/mpc` with `{"jsonrpc": "2.0", "id": 1, "method": "tools/list", "params": {}}`
          - Execute Tool: `POST /api/v1/mpc` with `{"jsonrpc": "2.0", "id": 1, "method": "tools/call", "params": {"name": "calculate", "arguments": {"expression": "2+2"}}}`
          
          ### Docker Image
          ```bash
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref }}
          ```
    
    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/mcp-server-0.0.1-SNAPSHOT.jar
        asset_name: mcp-server-${{ github.ref }}.jar
        asset_content_type: application/java-archive 